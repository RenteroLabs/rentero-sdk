!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("graphql-request")):"function"==typeof define&&define.amd?define(["exports","graphql-request"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).rentero={},e.graphqlRequest)}(this,(function(e,t){"use strict";function r(e,t,r,n){return new(r||(r=Promise))((function(s,o){function i(e){try{d(n.next(e))}catch(e){o(e)}}function a(e){try{d(n.throw(e))}catch(e){o(e)}}function d(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,a)}d((n=n.apply(e,t||[])).next())}))}function n(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)}function s(e,t,r,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,r):s?s.value=r:t.set(e,r),r}const o={mainnet:"",rinkeby:"https://rinkeby.rentero.io/subgraphs/name/john-rentero/rentero-market",bsc:"",bsctestnet:"https://bsc-testnet.rentero.io/subgraphs/name/john-rentero/rentero-market"};var i,a;i=new WeakMap,a=new WeakMap;var d=Object.freeze({__proto__:null,default:{}});e.Rentero=d,e.RenteroNFT=class{constructor(e,t){i.set(this,void 0),a.set(this,void 0),s(this,i,t.map((e=>e.toLowerCase())),"f"),s(this,a,o[e],"f")}getRentNFTsByAddress(e){return r(this,void 0,void 0,(function*(){const r=((new Date).getTime()/1e3).toFixed(),s=t.gql`
      query getRentNFTs($renter: String!, $contracts: [String!], $timestamp: String!) {
        leases(where: { 
          renter: $renter, 
          nftAddress_in: $contracts, 
          expires_gt: $timestamp ,
          }) {
          tokenId
          nftAddress
          lender
          expires
        }
      }
    `,o={renter:e.toLowerCase(),contracts:n(this,i,"f"),timestamp:r};return yield t.request(n(this,a,"f"),s,o)}))}getRentInfoById(e,s){return r(this,void 0,void 0,(function*(){const r=t.gql`
      query getRenterAddress($id: String!) {
        lease(id: $id) {
          renter
          lender
          expires
        }
      }
    `,o={id:[e.toLowerCase(),s].join("-")};return yield t.request(n(this,a,"f"),r,o)}))}getLendNFTsByAddress(e){return r(this,void 0,void 0,(function*(){const r=t.gql`
      query getLendNFTs($lender: String!, $contracts: [String!]) {
        leases(where: {
          lender: $lender, 
          nftAddress_in: $contracts, 
        }) {
          tokenId
          nftAddress
          lender
          renter
          expires 
        }
      }
    `,s={lender:e.toLowerCase(),contracts:n(this,i,"f")};return yield t.request(n(this,a,"f"),r,s)}))}getAllNFTsInMarket(){return r(this,void 0,void 0,(function*(){const e=t.gql`
      query getNFTs($contracts: [String!]) {
        leases(where: {nftAddress_in: $contracts}) {
          tokenId
          nftAddress
          lender
          renter
          expires 
        }
      }
    `,r={contracts:n(this,i,"f")};return yield t.request(n(this,a,"f"),e,r)}))}},Object.defineProperty(e,"__esModule",{value:!0})}));
