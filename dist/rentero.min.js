!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("graphql-request")):"function"==typeof define&&define.amd?define(["exports","graphql-request"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).rentero={},e.graphqlRequest)}(this,(function(e,t){"use strict";function r(e,t,r,n){return new(r||(r=Promise))((function(o,i){function s(e){try{c(n.next(e))}catch(e){i(e)}}function a(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((n=n.apply(e,t||[])).next())}))}function n(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)}function o(e,t,r,n,o){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?o.call(e,r):o?o.value=r:t.set(e,r),r}const i={mainnet:"",ropsten:"https://api.thegraph.com/subgraphs/name/john-rentero/rentero-market",goerli:""};var s,a;s=new WeakMap,a=new WeakMap;var c=Object.freeze({__proto__:null,default:{}});e.Rentero=c,e.RenteroNFT=class{constructor(e,t){s.set(this,void 0),a.set(this,void 0),o(this,s,t,"f"),o(this,a,i[e],"f")}getRentNFTsByAddress(e){return r(this,void 0,void 0,(function*(){const r=t.gql`
      query getRentNFTs($renter: String!, $contracts: [String!]) {
        leases(where: { renter: $renter, nftAddress_in: $contracts}) {
          tokenId
          nftAddress
          lender
          expires
        }
      }
    `,o={renter:e,contracts:n(this,s,"f")};return yield t.request(n(this,a,"f"),r,o)}))}getRentInfoById(e,o){return r(this,void 0,void 0,(function*(){const r=t.gql`
      query getRenterAddress($id: String!) {
        lease(id: $id) {
          renter
          lender
          expires
        }
      }
    `,i={id:[e,o].join("-")};return yield t.request(n(this,a,"f"),r,i)}))}},Object.defineProperty(e,"__esModule",{value:!0})}));
